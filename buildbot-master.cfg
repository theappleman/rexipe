from buildbot.plugins import *
c = BuildmasterConfig = {}
c['slaves'] = [buildslave.BuildSlave("example-slave", "pass")]
c['protocols'] = {'pb': {'port': 9989}}
c['change_source'] = []
c['change_source'].append(changes.GitPoller(
        'https://github.com/theappleman/rexipe132.git',
        workdir='gitpoller-workdir', branch='master',
        pollinterval=300))
c['schedulers'] = []
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="all",
                            change_filter=util.ChangeFilter(branch='master'),
                            treeStableTimer=None,
                            builderNames=["runtests"]))
c['schedulers'].append(schedulers.ForceScheduler(
                            name="force",
                            builderNames=["runtests"]))
factory = util.BuildFactory()
factory.addStep(steps.Git(repourl='https://github.com/theappleman/rexipe132.git', mode='incremental'))
factory.addStep(steps.ShellCommand(command=["make", "test"]))
c['builders'] = []
c['builders'].append(
    util.BuilderConfig(name="runtests",
      slavenames=["example-slave"],
      factory=factory))
c['status'] = []
from buildbot.status import html
from buildbot.status.web import authz, auth
authz_cfg=authz.Authz(
    auth=auth.BasicAuth([("rextest","rextest")]),
    gracefulShutdown = False,
    forceBuild = 'auth', # use this to test your slave once it is set up
    forceAllBuilds = 'auth',  # ..or this
    pingBuilder = False,
    stopBuild = False,
    stopAllBuilds = False,
    cancelPendingBuild = False,
)
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))
c['title'] = "Rexipe"
c['titleURL'] = "https://github.com/theappleman/rexipe132"
c['buildbotURL'] = "http://localhost:8010/"
c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
